{"version":3,"file":"static/js/995.4ce26e7c.chunk.js","mappings":"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","sources":["redux/contascts/contactsSelectors.js","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Loader/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContact = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectErorr = state => state.contacts.error;\nexport const selectfilterContact = state => state.filter;\nexport const selectAllContact = createSelector([selectContact, selectfilterContact], (contacts, filter) =>  \n    contacts\n        .filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        )\n)","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__SLHvV\"};","import PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nexport const Section = ({ title, children }) => (\n  <>\n    <h2 className={css.title}>{title}</h2>\n    {children}\n  </>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Notiflix from 'notiflix';\n// import css from './Form.module.css';\n\nimport { addContact } from 'redux/contascts/contactsOperations';\nimport { selectContact } from 'redux/contascts/contactsSelectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      Notiflix.Notify.warning(`${name} is alredy in contacts`);\n    }\n\n    if (contacts.find(contact => contact.number === number)) {\n      Notiflix.Notify.warning(`${number} is alredy in contacts`);\n    }\n    dispatch(addContact({ name, number}));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">\n        <p >Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"number\">\n        <p >Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button  type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { contactsFilter } from 'redux/filter/filterSlice';\nimport { selectfilterContact } from 'redux/contascts/contactsSelectors';\n// import css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectfilterContact);\n  return (\n    <label >\n      <p >Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(contactsFilter(e.target.value.toLowerCase()))}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteContact } from 'redux/contascts/contactsOperations';\nimport { selectAllContact } from 'redux/contascts/contactsSelectors';\n// import css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContact);\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button\n            onClick={() => dispatch(deleteContact(id))}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { selectContact, selectIsLoading, selectErorr } from \"redux/contascts/contactsSelectors\";\nimport { fetchContacts } from \"redux/contascts/contactsOperations\";\nimport { Section } from \"components/Section/Section\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function Contacts () {\n  const contacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectErorr);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n        <Helmet>\n          <title>Contacts</title>\n        </Helmet>\n      <Section title=\"Phone book\">\n        <ContactForm />\n      </Section>\n      {contacts.length > 0 && (\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n       )} \n      {isLoading && !error && <Loader />}\n    </div>\n  );\n\n};"],"names":["selectContact","state","contacts","items","selectIsLoading","isLoading","selectErorr","error","selectfilterContact","filter","selectAllContact","createSelector","contact","name","toLowerCase","includes","Section","title","children","className","css","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","reset","onSubmit","preventDefault","find","Notiflix","addContact","htmlFor","type","onChange","pattern","required","Filter","contactsFilter","ContactList","map","id","onClick","deleteContact","Loader","style","textAlign","visible","height","width","ariaLabel","wrapperClass","colors","Contacts","useEffect","fetchContacts","Helmet","length"],"sourceRoot":""}